
Concepts:
class library project will have ".dll" extension
console project will have ".exe" extension
assmblies will created under bin folder of the project


different access modifiers:
private : are accessible only with in the same class
can not access from other class. we can call this private from other methods
or from construcor of the same class.
methods/properties by default have private access modifier

public: are accessible from any other class, we can use with in the class and outside of the class too
we can use with in assembly and outside of the assembly

internal: are accessible with in the same assembly, not outside of the assembly
classes will have internal access modifier by default

protected: are accessible with in the same class and by derived class
we can access the protected methods outside of the class using child class object name.


protected internal: combines both protected and internal, are accessible with in same assembly and by derived classes

Exception Handling:
Comiple time errors: we get these errors while bulding the application/project
runtime errors: we get this errors at runtime or while running the program,
these are called exceptions and if we don't handle them proepley program will be closed abnormally

try block: the code that needs to be excuted will be inside the try block

catch: when exception occurs the code with in catch block get executed
if thre is no excpetion no excpetion blocks will be exceuted.
program will go to next line after all the catch blocks
if one catch block is executed it will skip all others


ex.message property will give the error message
ex.stacktrace property, will give class name and line number
one try can have one or more than catch blocks
but main exception block should be last one. other catch blocks should be before this catch block
sample exceptions: DivideByZeroException, 

finally, the code will be executed if there is an exception or there is no exception
every time try block should come with one or more catch blocks or one finally block
try, finally is allowed
try, multiple catch is allowed
try catch (one or more), finally allowed

Exception is the class base class for all other exception classes

Concepts:
1. Lamda Expressions:  to write anonymous methods or in line functions
ex: (parameters) => statements
    parameters are optional, => separted paramters and statements

2. var keyword: 
2. linq : Language Inegrated Query
In LINQ, you can write queries in two wa
ys: in query syntax and method syntax.

//query syntax:
var : dynamic data type, at tun time this will get the data type based on the data

query syntax:
return type = from parameter in source
              where , exprression to filer the data
              select parameter;
where and select are called operators

var longLoudHeroes = from h in heroes
  where h.Length > 6
  select h.ToUpper();

Method syntax: method calls on the collection we are querying:

var longHeroes = heroes.Where(h => h.Length > 6);
var longLoudHeroes = longHeroes.Select(h => h.ToUpper());

//chain expressions
var longLoudHeroes2 = heroes
  .Where(h => h.Length > 6)
  .Select(h => h.ToUpper());

3) adding objects to list collection
   ex: List<EmployeeDetails> empList = new List<EmployeeDetails>();

 more LINQ mehtods:
 1) FirstOrDefault: select the first element from the list

 2) checking the object is null or not
    if (firstEmp != null)

3) signleorDefault: if i get mroe than one matches it will throws the exceptipn

4) skip(value): it will skipe a specified number of elements based on value parameter

5) orderby, it will be usefult for sorting
   orderbydescending

6) write a query to get the second highest number from the linq
ex: var resttNum = ints.OrderbyDecding(n => n).skip(1).FirstOrDefault();

7_ string vs string builder
Stirng is immutable, once it is created it can't be changes

varaible values will be stored in the memory
String word = "test this"; memory addres: 23456
word += " this is second string"; memory addess: 346789 

string builder is mutable, allows to modify the value/content
ex: StringBuilder sb = new StringBuilder("test this"); //sb vaiebale is created at memoey location 3456778
            sb.Append(" this is second string "); //updated value will be located at same meomry location 3456778

for single value string is better for mdofications then string builder is better

Exptension Methods: add new methods to the existing class without modifying the original class
Systax: it has to be a static method and static class and this keyword is required in the paramter
after this keywrod u have to specify the targted class name

public static int wordCount(this string str)
        {
            return str.Split(" ").Length;
        }
            
